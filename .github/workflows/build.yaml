name: Build

on:
  workflow_call:
    inputs:
      runner_os:
        required: true
        type: string
      check:
        required: true
        type: boolean
      build_release_apks:
        required: false
        type: boolean
        default: false
      create_release_from_tag:
        required: false
        type: boolean
        default: false
    secrets:
      keystore_base64:
        required: true
      keystore_password:
        required: true
      keystore_key_password:
        required: true
      play_service_account_json:
        required: true

jobs:
  build:
    runs-on: ${{ inputs.runner_os }}
    env:
      KEYSTORE_PATH: ./release.jks
    steps:
      - uses: actions/checkout@v4

      - name: Set up node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run tests
        if: ${{ inputs.check }}
        run: ./gradlew check

      - name: Decode keystore
        if: ${{ inputs.build_release_apks }}
        env:
          ENCODED_KEYSTORE: ${{ secrets.keystore_base64 }}
        run: |
          if [ -z "$ENCODED_KEYSTORE" ]; then
            echo "secret 'keystore_base64' is not set"
            exit 1
          fi
          node ./scripts/fileBase64Converter.js str2f $ENCODED_KEYSTORE $KEYSTORE_PATH

      - name: Build release app
        if: ${{ inputs.build_release_apks }}
        env:
          KEYSTORE_PASSWORD: ${{ secrets.keystore_password }}
          KEYSTORE_KEY_PASSWORD: ${{ secrets.keystore_key_password }}
        run: ./gradlew app:assembleRelease app:bundleRelease

      - name: Cleanup keystore
        if: always()
        run: |
          if [ -e "$KEYSTORE_PATH" ]; then
            rm -f $KEYSTORE_PATH
          fi

      - name: Upload build outputs
        if: ${{ inputs.build_release_apks || ((inputs.create_release_from_tag) && startsWith(github.ref, 'refs/tags/v')) }}
        uses: actions/upload-artifact@v3
        with:
          name: app-build-outputs
          path: app/build/outputs

  publish:
    if: ${{ (inputs.create_release_from_tag) && startsWith(github.ref, 'refs/tags/v') }}
    needs: [ build ]
    runs-on: ${{ inputs.runner_os }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: app-build-outputs
          path: app/build/outputs

      - name: Create GitHUb release from tag
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          files: |
            app/build/outputs/apk/release/app-release.apk

      - name: Upload App bundle to Google Play
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.play_service_account_json }}
          packageName: com.dokar.upnextgpt
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: internal
          mappingFile: app/build/outputs/mapping/release/mapping.txt
          changesNotSentForReview: true
